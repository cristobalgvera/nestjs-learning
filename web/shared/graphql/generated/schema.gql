# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    "Create new product with a category associated"
    createProduct(
        "Product image url"
        imageUrl: String = "",
        "Product measurement"
        measure: String,
        "Product name"
        name: String!,
        "Product price"
        price: Int!,
        "Product category ID"
        productCategoryId: ID!
    ): Product!
    "Create new category for products"
    createProductCategory(
        "Category name"
        name: String!
    ): ProductCategory!
    "Delete an existing product"
    deleteProduct(
        "Product ID"
        id: ID!
    ): Boolean!
    "Delete an existing product category"
    deleteProductCategory(
        "Category ID"
        id: ID!
    ): Boolean!
    "Update an existing product"
    updateProduct(
        id: ID!,
        "Product image url"
        imageUrl: String = "",
        "Product measurement"
        measure: String,
        "Product name"
        name: String,
        "Product price"
        price: Int,
        "Product category ID"
        productCategoryId: ID
    ): Product!
    "Update an existing product category"
    updateProductCategory(
        id: ID!,
        "Category name"
        name: String
    ): Boolean!
}

type Product {
    "Product category"
    category: ProductCategory!
    "Product ID"
    id: ID!
    "Product image url"
    imageUrl: String
    "Product measurement"
    measure: String
    "Product name"
    name: String!
    "Product price"
    price: Int!
}

type ProductCategory {
    "Category ID"
    id: ID!
    "Category name"
    name: String!
    "All product from specific category"
    products: [Product!]!
}

type Query {
    "Find one product"
    product(
        "Product ID"
        id: ID!
    ): Product!
    "Find all categories with his data"
    productCategories: [ProductCategory!]!
    "Find all products of one category"
    productCategory(
        "Category ID"
        id: ID!
    ): ProductCategory!
    "Find all products from database"
    products: [Product!]!
}
